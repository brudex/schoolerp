{"version":3,"file":"js/finance/fee/allocation/create~js/finance/fee/allocation/edit.js?id=815e44de7af04e8dd696","sources":["webpack:///form.vue","webpack:///./resources/js/views/finance/fee/allocation/form.vue?ffa1","webpack:///./resources/js/views/finance/fee/allocation/form.vue","webpack:///./resources/js/views/finance/fee/allocation/form.vue?ee54","webpack:///./resources/js/views/finance/fee/allocation/form.vue?aedc"],"sourcesContent":["<template>\n\t<div>\n\t    <form @submit.prevent=\"proceed\" @keydown=\"feeAllocationForm.errors.clear($event.target.name)\">\n\t        <div class=\"row\" v-if=\"!uuid\">\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('academic.batch')}}</label>\n                        <v-select label=\"name\" v-model=\"selected_batch\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" @close=\"feeAllocationForm.errors.clear('batch_id')\" @remove=\"feeAllocationForm.batch_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"feeAllocationForm\" prop-name=\"batch_id\"></show-error>\n\t                </div>\n\t            </div>\n                <div class=\"col-12 col-sm-4\" v-if=\"!uuid\">\n                    <div class=\"form-group\">\n                        <div>{{trans('finance.is_course_fee')}}</div>\n                        <switches class=\"m-t-20\" v-model=\"feeAllocationForm.is_course_fee\" theme=\"bootstrap\" color=\"success\"></switches> \n                        <show-error :form-name=\"feeAllocationForm\" prop-name=\"is_course_fee\"></show-error>\n                    </div>\n                </div>\n\t        </div>\n            <template v-if=\"fee_allocation && !ruuid\">\n                <h4 v-if=\"fee_allocation.course_id\">{{fee_allocation.course.name}}</h4>\n                <h4 class=\"card-title\" v-else>{{fee_allocation.batch.course.name+' '+fee_allocation.batch.name}}</h4>\n                <br />\n            </template>\n            <template v-if=\"feeAllocationForm.batch_id || ruuid\">\n    \t        <div v-for=\"fee_group in feeAllocationForm.fee_groups\" class=\"m-b-20 p-4\">\n    \t            <h4>{{fee_group.fee_group_name}}</h4>\n    \t            <div style=\"padding:0px;\" v-if=\"fee_group.installments.length\">\n    \t                <fieldset v-for=\"(installment,index) in fee_group.installments\">\n    \t                    <legend>\n    \t                        {{trans('finance.fee_installment')}} - {{index+1}} \n    \t                        <span class=\"has-error m-l-10 \" style=\"cursor:pointer;\" :key=\"fee_group.fee_group_id+'_'+index\" v-confirm=\"{ok: confirmDeleteInstallment(fee_group.fee_group_id,index)}\" v-tooltip=\"trans('finance.delete_fee_installment')\"><i class=\"fa fa-times-circle\"></i></span>\n    \t                    </legend>\n    \t                    <div class=\"row\" style=\"padding:0 20px;\">\n                                <div class=\"col-12 col-sm-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('finance.fee_installment_title')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"installment.title\" :name=\"getTitleName(fee_group.fee_group_id,index)\" :placeholder=\"trans('finance.fee_installment_title')\">\n                                                <show-error :form-name=\"feeAllocationForm\" :prop-name=\"getTitleName(fee_group.fee_group_id,index)\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('finance.fee_installment_due_date')}}</label>\n                                                <datepicker v-model=\"installment.due_date\" :bootstrapStyling=\"true\" :placeholder=\"trans('finance.fee_installment_due_date')\" @selected=\"feeAllocationForm.errors.clear(getDueDateName(fee_group.fee_group_id,index))\" :name=\"getDueDateName(fee_group.fee_group_id,index)\"></datepicker>\n                                                <show-error :form-name=\"feeAllocationForm\" :prop-name=\"getDueDateName(fee_group.fee_group_id,index)\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-4\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('finance.late_fee_applicable')}}</label> <br />\n                                                <switches class=\"m-l-20\" v-model=\"installment.late_fee_applicable\" theme=\"bootstrap\" color=\"success\"></switches> \n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-4\" v-if=\"installment.late_fee_applicable\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('finance.late_fee_frequency')}}</label>\n                                                <select v-model=\"installment.late_fee_frequency\" class=\"custom-select col-12\" :name=\"getLateFeeFrequencyName(fee_group.fee_group_id,index)\">\n                                                  <option v-for=\"option in late_fee_frequencies\" v-bind:value=\"option.value\">\n                                                    {{ option.text }}\n                                                  </option>\n                                                </select>\n                                                <show-error :form-name=\"feeAllocationForm\" :prop-name=\"getLateFeeFrequencyName(fee_group.fee_group_id,index)\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-4\" v-if=\"installment.late_fee_applicable\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('finance.late_fee')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"installment.late_fee\" :name=\"getLateFeeName(fee_group.fee_group_id,index)\" :placeholder=\"trans('finance.late_fee')\">\n                                                <show-error :form-name=\"feeAllocationForm\" :prop-name=\"getLateFeeName(fee_group.fee_group_id,index)\"></show-error>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-12 col-sm-6\">\n                                    <div class=\"row\">\n            \t                        <div class=\"col-12 col-sm-6\" v-for=\"fee_head in installment.fee_heads\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{fee_head.name}}</label>\n                                                <div class=\"input-group mb-3\">\n                                                    <input class=\"form-control\" type=\"text\" v-model=\"fee_head.amount\" :name=\"getFeeName(fee_group.fee_group_id,index,fee_head.id)\" :placeholder=\"trans('finance.fee_installment_amount')\">\n                                                    <div class=\"input-group-append\">\n                                                        <div class=\"input-group-text\">\n                                                            <input type=\"checkbox\" v-model=\"fee_head.is_optional\" v-tooltip=\"trans('finance.fee_is_optional')\">\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <show-error :form-name=\"feeAllocationForm\" :prop-name=\"getFeeName(fee_group.fee_group_id,index,fee_head.id)\"></show-error>\n                                            </div>\n            \t                        </div>\n                                        <div class=\"col-12 col-sm-6\" v-if=\"fee_group.has_transport\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('transport.transport')}}</label>\n                                                <v-select label=\"name\" v-model=\"installment.selected_transport_fee\" :name=\"getTransportFeeName(fee_group.fee_group_id,index)\" :id=\"getTransportFeeName(fee_group.fee_group_id,index)\" :options=\"transport_fees\" :placeholder=\"trans('general.select_one')\" @select=\"onTransportFeeSelect\" @close=\"\" @remove=\"installment.transport_fee_id = ''\">\n                                                    <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!transport_fees.length\">\n                                                        {{trans('general.no_option_found')}}\n                                                    </div>\n                                                </v-select>\n                                                <show-error :form-name=\"feeAllocationForm\" :prop-name=\"getTransportFeeName(fee_group.fee_group_id,index)\"></show-error>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n    \t                    </div>\n    \t                </fieldset>\n    \t            </div>\n    \t            <button type=\"button\" class=\"btn btn-info btn-sm pull-right\" @click=\"addInstallment(fee_group.fee_group_id)\">{{trans('finance.add_fee_installment')}}</button>\n    \t            <div class=\"clearfix\"></div>\n    \t        </div>\n                <div class=\"card-footer text-right\">\n                    <router-link to=\"/finance/fee/allocation\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\n                    <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\n                </div>\n            </template>\n\t    </form>\n\t</div>\n</template>\n\n<script>\n\n    export default {\n        components : {},\n        props:['uuid','ruuid'],\n        data() {\n            return {\n                batches: [],\n                fee_groups: [],\n                fee_heads: [],\n                transport_fees: [],\n                late_fee_frequencies: [],\n                selected_batch: null,\n                feeAllocationForm: new Form({\n                    is_course_fee: false,\n                    batch_id: '',\n                    fee_groups: []\n                }),\n                fee_allocation: null\n            };\n        },\n        mounted(){\n            this.getPreRequisite();\n        },\n        methods: {\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/fee/allocation/pre-requisite')\n                    .then(response => {\n                        this.batches = response.batches;\n                        this.fee_groups = response.fee_groups;\n                        this.fee_heads = response.fee_heads;\n                        this.transport_fees = response.transport_fees;\n                        this.late_fee_frequencies = response.late_fee_frequencies;\n\n                        this.fee_groups.forEach(fee_group => {\n\n                            this.feeAllocationForm.fee_groups.push({\n                                fee_group_id: fee_group.id,\n                                fee_group_name: fee_group.name,\n                                has_transport: (fee_group.options) ? fee_group.options.has_transport : 0,\n                                installments: []\n                            });\n                            \n                            if(!this.uuid && !this.ruuid)\n                                this.addInstallment(fee_group.id);\n                        });\n\n                        if(this.uuid || this.ruuid)\n                            this.getFeeAllocation();\n\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            addInstallment(fee_group_id){\n                let fee_group = this.feeAllocationForm.fee_groups.find( o => o.fee_group_id == fee_group_id);\n\n                let heads = this.addFeeHead(fee_group_id);\n\n                fee_group.installments.push({\n                    uuid: this.$uuid.v4(),\n                    due_date: '',\n                    title: '',\n                    fee_heads: heads,\n                    late_fee_applicable: false,\n                    late_fee_frequency: '1',\n                    late_fee: '',\n                    selected_transport_fee: null,\n                    transport_fee_id: ''\n                });\n            },\n            addFeeHead(fee_group_id){\n                let heads = [];\n                this.fee_heads.forEach(fee_head => {\n                    if(fee_head.fee_group_id == fee_group_id)\n                        heads.push({\n                            id: fee_head.id,\n                            amount: '',\n                            name: fee_head.name,\n                            is_optional: false\n                        });\n                })\n                return heads;\n            },\n            confirmDeleteInstallment(fee_group_id, index){\n                return dialog => this.deleteInstallment(fee_group_id, index);\n            },\n            deleteInstallment(fee_group_id, index){\n                let fee_group = this.feeAllocationForm.fee_groups.find( o => o.fee_group_id == fee_group_id);\n                fee_group.installments.splice(index, 1);\n            },\n            getTitleName(fee_group_id,index){\n                return fee_group_id+'_'+index+'_title';\n            },\n            getDueDateName(fee_group_id,index){\n                return fee_group_id+'_'+index+'_due_date';\n            },\n            getFeeName(fee_group_id,index,fee_id){\n                return fee_group_id+'_'+index+'_'+fee_id+'_fee';\n            },\n            getLateFeeFrequencyName(fee_group_id,index){\n                return fee_group_id+'_'+index+'_late_fee_frequency';\n            },\n            getLateFeeName(fee_group_id,index){\n                return fee_group_id+'_'+index+'_late_fee';\n            },\n            getTransportFeeName(fee_group_id,index){\n                return fee_group_id+'_'+index+'_transport_fee';\n            },\n            getFeeAllocation(){\n                let loader = this.$loading.show();\n                axios.get('/api/fee/allocation/'+(this.ruuid || this.uuid))\n                    .then(response => {\n                        this.fee_allocation = response;\n\n                        if (response.paid_count && ! this.ruuid) {\n                            toastr.error(i18n.finance.cannot_modify_fee_allocation);\n                            loader.hide();\n                            this.$router.push('/finance/fee/allocation');\n                        }\n\n                        if (! this.ruuid) {\n                            this.selected_batch = {'name':response.batch.course.name+' '+response.batch.name, 'id':response.batch_id};\n                            this.feeAllocationForm.batch_id = response.batch_id;\n                        }\n\n                        this.feeAllocationForm.fee_groups.forEach(fee_group => {\n                            let fee_allocation_group = response.fee_allocation_groups.find( o => o.fee_group_id === fee_group.fee_group_id);\n\n                            fee_allocation_group.fee_installments.forEach(installment => {\n\n                                let heads = this.addFeeHead(fee_group.fee_group_id);\n\n                                installment.fee_installment_details.forEach(fee_installment_detail => {\n                                    let installment_detail = heads.find( o => o.id === fee_installment_detail.fee_head_id);\n                                    installment_detail.amount = fee_installment_detail.amount ? fee_installment_detail.amount : '';\n                                    installment_detail.is_optional = fee_installment_detail.is_optional ? 1 : 0;\n                                });\n\n                                fee_group.installments.push({\n                                    uuid: installment.uuid,\n                                    due_date: installment.due_date,\n                                    title: installment.title,\n                                    fee_heads: heads,\n                                    late_fee_applicable: installment.late_fee_applicable,\n                                    late_fee_frequency: installment.late_fee_frequency,\n                                    late_fee: installment.late_fee,\n                                    transport_fee_id: installment.transport_fee_id,\n                                    selected_transport_fee: (installment.transport_fee_id) ? {id: installment.transport_fee_id, name: installment.transport_fee.name} : null\n                                });\n                            });\n                        });\n                        loader.hide();\n\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            proceed(){\n                if(this.uuid)\n                    this.update();\n                else\n                    this.store();\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.feeAllocationForm.post('/api/fee/allocation')\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/finance/fee/allocation');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.feeAllocationForm.patch('/api/fee/allocation/'+this.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/finance/fee/allocation');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            onBatchSelect(selectedOption){\n                this.feeAllocationForm.batch_id = selectedOption.id;\n            },\n            onTransportFeeSelect(selectedOption, id){\n                let field_id = id.split(\"_\");\n                let fee_group_id = field_id[0];\n                let index = field_id[1];\n                let fee_group = this.feeAllocationForm.fee_groups.find( o => o.fee_group_id == fee_group_id);\n                let installment = fee_group.installments[index];\n                installment.transport_fee_id = selectedOption.id;\n            }\n        }\n    }\n</script>","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function($event) {\n            $event.preventDefault()\n            return _vm.proceed($event)\n          },\n          keydown: function($event) {\n            return _vm.feeAllocationForm.errors.clear($event.target.name)\n          }\n        }\n      },\n      [\n        !_vm.uuid\n          ? _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"academic.batch\")))\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          \"group-values\": \"batches\",\n                          \"group-label\": \"course_group\",\n                          \"group-select\": false,\n                          name: \"batch_id\",\n                          id: \"batch_id\",\n                          options: _vm.batches,\n                          placeholder: _vm.trans(\"academic.select_batch\")\n                        },\n                        on: {\n                          select: _vm.onBatchSelect,\n                          close: function($event) {\n                            return _vm.feeAllocationForm.errors.clear(\n                              \"batch_id\"\n                            )\n                          },\n                          remove: function($event) {\n                            _vm.feeAllocationForm.batch_id = \"\"\n                          }\n                        },\n                        model: {\n                          value: _vm.selected_batch,\n                          callback: function($$v) {\n                            _vm.selected_batch = $$v\n                          },\n                          expression: \"selected_batch\"\n                        }\n                      },\n                      [\n                        !_vm.batches.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\"\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                            \"\n                                )\n                              ]\n                            )\n                          : _vm._e()\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.feeAllocationForm,\n                        \"prop-name\": \"batch_id\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              !_vm.uuid\n                ? _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"div\", [\n                          _vm._v(_vm._s(_vm.trans(\"finance.is_course_fee\")))\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"switches\", {\n                          staticClass: \"m-t-20\",\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.feeAllocationForm.is_course_fee,\n                            callback: function($$v) {\n                              _vm.$set(\n                                _vm.feeAllocationForm,\n                                \"is_course_fee\",\n                                $$v\n                              )\n                            },\n                            expression: \"feeAllocationForm.is_course_fee\"\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.feeAllocationForm,\n                            \"prop-name\": \"is_course_fee\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ])\n                : _vm._e()\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.fee_allocation && !_vm.ruuid\n          ? [\n              _vm.fee_allocation.course_id\n                ? _c(\"h4\", [_vm._v(_vm._s(_vm.fee_allocation.course.name))])\n                : _c(\"h4\", { staticClass: \"card-title\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.fee_allocation.batch.course.name +\n                          \" \" +\n                          _vm.fee_allocation.batch.name\n                      )\n                    )\n                  ]),\n              _vm._v(\" \"),\n              _c(\"br\")\n            ]\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.feeAllocationForm.batch_id || _vm.ruuid\n          ? [\n              _vm._l(_vm.feeAllocationForm.fee_groups, function(fee_group) {\n                return _c(\"div\", { staticClass: \"m-b-20 p-4\" }, [\n                  _c(\"h4\", [_vm._v(_vm._s(fee_group.fee_group_name))]),\n                  _vm._v(\" \"),\n                  fee_group.installments.length\n                    ? _c(\n                        \"div\",\n                        { staticStyle: { padding: \"0px\" } },\n                        _vm._l(fee_group.installments, function(\n                          installment,\n                          index\n                        ) {\n                          return _c(\"fieldset\", [\n                            _c(\"legend\", [\n                              _vm._v(\n                                \"\\n    \\t                        \" +\n                                  _vm._s(_vm.trans(\"finance.fee_installment\")) +\n                                  \" - \" +\n                                  _vm._s(index + 1) +\n                                  \" \\n    \\t                        \"\n                              ),\n                              _c(\n                                \"span\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"confirm\",\n                                      rawName: \"v-confirm\",\n                                      value: {\n                                        ok: _vm.confirmDeleteInstallment(\n                                          fee_group.fee_group_id,\n                                          index\n                                        )\n                                      },\n                                      expression:\n                                        \"{ok: confirmDeleteInstallment(fee_group.fee_group_id,index)}\"\n                                    },\n                                    {\n                                      name: \"tooltip\",\n                                      rawName: \"v-tooltip\",\n                                      value: _vm.trans(\n                                        \"finance.delete_fee_installment\"\n                                      ),\n                                      expression:\n                                        \"trans('finance.delete_fee_installment')\"\n                                    }\n                                  ],\n                                  key: fee_group.fee_group_id + \"_\" + index,\n                                  staticClass: \"has-error m-l-10 \",\n                                  staticStyle: { cursor: \"pointer\" }\n                                },\n                                [_c(\"i\", { staticClass: \"fa fa-times-circle\" })]\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"row\",\n                                staticStyle: { padding: \"0 20px\" }\n                              },\n                              [\n                                _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                                  _c(\"div\", { staticClass: \"row\" }, [\n                                    _c(\n                                      \"div\",\n                                      { staticClass: \"col-12 col-sm-6\" },\n                                      [\n                                        _c(\n                                          \"div\",\n                                          { staticClass: \"form-group\" },\n                                          [\n                                            _c(\n                                              \"label\",\n                                              { attrs: { for: \"\" } },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"finance.fee_installment_title\"\n                                                    )\n                                                  )\n                                                )\n                                              ]\n                                            ),\n                                            _vm._v(\" \"),\n                                            _c(\"input\", {\n                                              directives: [\n                                                {\n                                                  name: \"model\",\n                                                  rawName: \"v-model\",\n                                                  value: installment.title,\n                                                  expression:\n                                                    \"installment.title\"\n                                                }\n                                              ],\n                                              staticClass: \"form-control\",\n                                              attrs: {\n                                                type: \"text\",\n                                                name: _vm.getTitleName(\n                                                  fee_group.fee_group_id,\n                                                  index\n                                                ),\n                                                placeholder: _vm.trans(\n                                                  \"finance.fee_installment_title\"\n                                                )\n                                              },\n                                              domProps: {\n                                                value: installment.title\n                                              },\n                                              on: {\n                                                input: function($event) {\n                                                  if ($event.target.composing) {\n                                                    return\n                                                  }\n                                                  _vm.$set(\n                                                    installment,\n                                                    \"title\",\n                                                    $event.target.value\n                                                  )\n                                                }\n                                              }\n                                            }),\n                                            _vm._v(\" \"),\n                                            _c(\"show-error\", {\n                                              attrs: {\n                                                \"form-name\":\n                                                  _vm.feeAllocationForm,\n                                                \"prop-name\": _vm.getTitleName(\n                                                  fee_group.fee_group_id,\n                                                  index\n                                                )\n                                              }\n                                            })\n                                          ],\n                                          1\n                                        )\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"div\",\n                                      { staticClass: \"col-12 col-sm-6\" },\n                                      [\n                                        _c(\n                                          \"div\",\n                                          { staticClass: \"form-group\" },\n                                          [\n                                            _c(\n                                              \"label\",\n                                              { attrs: { for: \"\" } },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"finance.fee_installment_due_date\"\n                                                    )\n                                                  )\n                                                )\n                                              ]\n                                            ),\n                                            _vm._v(\" \"),\n                                            _c(\"datepicker\", {\n                                              attrs: {\n                                                bootstrapStyling: true,\n                                                placeholder: _vm.trans(\n                                                  \"finance.fee_installment_due_date\"\n                                                ),\n                                                name: _vm.getDueDateName(\n                                                  fee_group.fee_group_id,\n                                                  index\n                                                )\n                                              },\n                                              on: {\n                                                selected: function($event) {\n                                                  _vm.feeAllocationForm.errors.clear(\n                                                    _vm.getDueDateName(\n                                                      fee_group.fee_group_id,\n                                                      index\n                                                    )\n                                                  )\n                                                }\n                                              },\n                                              model: {\n                                                value: installment.due_date,\n                                                callback: function($$v) {\n                                                  _vm.$set(\n                                                    installment,\n                                                    \"due_date\",\n                                                    $$v\n                                                  )\n                                                },\n                                                expression:\n                                                  \"installment.due_date\"\n                                              }\n                                            }),\n                                            _vm._v(\" \"),\n                                            _c(\"show-error\", {\n                                              attrs: {\n                                                \"form-name\":\n                                                  _vm.feeAllocationForm,\n                                                \"prop-name\": _vm.getDueDateName(\n                                                  fee_group.fee_group_id,\n                                                  index\n                                                )\n                                              }\n                                            })\n                                          ],\n                                          1\n                                        )\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"div\",\n                                      { staticClass: \"col-12 col-sm-4\" },\n                                      [\n                                        _c(\n                                          \"div\",\n                                          { staticClass: \"form-group\" },\n                                          [\n                                            _c(\n                                              \"label\",\n                                              { attrs: { for: \"\" } },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"finance.late_fee_applicable\"\n                                                    )\n                                                  )\n                                                )\n                                              ]\n                                            ),\n                                            _vm._v(\" \"),\n                                            _c(\"br\"),\n                                            _vm._v(\" \"),\n                                            _c(\"switches\", {\n                                              staticClass: \"m-l-20\",\n                                              attrs: {\n                                                theme: \"bootstrap\",\n                                                color: \"success\"\n                                              },\n                                              model: {\n                                                value:\n                                                  installment.late_fee_applicable,\n                                                callback: function($$v) {\n                                                  _vm.$set(\n                                                    installment,\n                                                    \"late_fee_applicable\",\n                                                    $$v\n                                                  )\n                                                },\n                                                expression:\n                                                  \"installment.late_fee_applicable\"\n                                              }\n                                            })\n                                          ],\n                                          1\n                                        )\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    installment.late_fee_applicable\n                                      ? _c(\n                                          \"div\",\n                                          { staticClass: \"col-12 col-sm-4\" },\n                                          [\n                                            _c(\n                                              \"div\",\n                                              { staticClass: \"form-group\" },\n                                              [\n                                                _c(\n                                                  \"label\",\n                                                  { attrs: { for: \"\" } },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"finance.late_fee_frequency\"\n                                                        )\n                                                      )\n                                                    )\n                                                  ]\n                                                ),\n                                                _vm._v(\" \"),\n                                                _c(\n                                                  \"select\",\n                                                  {\n                                                    directives: [\n                                                      {\n                                                        name: \"model\",\n                                                        rawName: \"v-model\",\n                                                        value:\n                                                          installment.late_fee_frequency,\n                                                        expression:\n                                                          \"installment.late_fee_frequency\"\n                                                      }\n                                                    ],\n                                                    staticClass:\n                                                      \"custom-select col-12\",\n                                                    attrs: {\n                                                      name: _vm.getLateFeeFrequencyName(\n                                                        fee_group.fee_group_id,\n                                                        index\n                                                      )\n                                                    },\n                                                    on: {\n                                                      change: function($event) {\n                                                        var $$selectedVal = Array.prototype.filter\n                                                          .call(\n                                                            $event.target\n                                                              .options,\n                                                            function(o) {\n                                                              return o.selected\n                                                            }\n                                                          )\n                                                          .map(function(o) {\n                                                            var val =\n                                                              \"_value\" in o\n                                                                ? o._value\n                                                                : o.value\n                                                            return val\n                                                          })\n                                                        _vm.$set(\n                                                          installment,\n                                                          \"late_fee_frequency\",\n                                                          $event.target.multiple\n                                                            ? $$selectedVal\n                                                            : $$selectedVal[0]\n                                                        )\n                                                      }\n                                                    }\n                                                  },\n                                                  _vm._l(\n                                                    _vm.late_fee_frequencies,\n                                                    function(option) {\n                                                      return _c(\n                                                        \"option\",\n                                                        {\n                                                          domProps: {\n                                                            value: option.value\n                                                          }\n                                                        },\n                                                        [\n                                                          _vm._v(\n                                                            \"\\n                                                    \" +\n                                                              _vm._s(\n                                                                option.text\n                                                              ) +\n                                                              \"\\n                                                  \"\n                                                          )\n                                                        ]\n                                                      )\n                                                    }\n                                                  ),\n                                                  0\n                                                ),\n                                                _vm._v(\" \"),\n                                                _c(\"show-error\", {\n                                                  attrs: {\n                                                    \"form-name\":\n                                                      _vm.feeAllocationForm,\n                                                    \"prop-name\": _vm.getLateFeeFrequencyName(\n                                                      fee_group.fee_group_id,\n                                                      index\n                                                    )\n                                                  }\n                                                })\n                                              ],\n                                              1\n                                            )\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    installment.late_fee_applicable\n                                      ? _c(\n                                          \"div\",\n                                          { staticClass: \"col-12 col-sm-4\" },\n                                          [\n                                            _c(\n                                              \"div\",\n                                              { staticClass: \"form-group\" },\n                                              [\n                                                _c(\n                                                  \"label\",\n                                                  { attrs: { for: \"\" } },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"finance.late_fee\"\n                                                        )\n                                                      )\n                                                    )\n                                                  ]\n                                                ),\n                                                _vm._v(\" \"),\n                                                _c(\"input\", {\n                                                  directives: [\n                                                    {\n                                                      name: \"model\",\n                                                      rawName: \"v-model\",\n                                                      value:\n                                                        installment.late_fee,\n                                                      expression:\n                                                        \"installment.late_fee\"\n                                                    }\n                                                  ],\n                                                  staticClass: \"form-control\",\n                                                  attrs: {\n                                                    type: \"text\",\n                                                    name: _vm.getLateFeeName(\n                                                      fee_group.fee_group_id,\n                                                      index\n                                                    ),\n                                                    placeholder: _vm.trans(\n                                                      \"finance.late_fee\"\n                                                    )\n                                                  },\n                                                  domProps: {\n                                                    value: installment.late_fee\n                                                  },\n                                                  on: {\n                                                    input: function($event) {\n                                                      if (\n                                                        $event.target.composing\n                                                      ) {\n                                                        return\n                                                      }\n                                                      _vm.$set(\n                                                        installment,\n                                                        \"late_fee\",\n                                                        $event.target.value\n                                                      )\n                                                    }\n                                                  }\n                                                }),\n                                                _vm._v(\" \"),\n                                                _c(\"show-error\", {\n                                                  attrs: {\n                                                    \"form-name\":\n                                                      _vm.feeAllocationForm,\n                                                    \"prop-name\": _vm.getLateFeeName(\n                                                      fee_group.fee_group_id,\n                                                      index\n                                                    )\n                                                  }\n                                                })\n                                              ],\n                                              1\n                                            )\n                                          ]\n                                        )\n                                      : _vm._e()\n                                  ])\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"row\" },\n                                    [\n                                      _vm._l(installment.fee_heads, function(\n                                        fee_head\n                                      ) {\n                                        return _c(\n                                          \"div\",\n                                          { staticClass: \"col-12 col-sm-6\" },\n                                          [\n                                            _c(\n                                              \"div\",\n                                              { staticClass: \"form-group\" },\n                                              [\n                                                _c(\n                                                  \"label\",\n                                                  { attrs: { for: \"\" } },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(fee_head.name)\n                                                    )\n                                                  ]\n                                                ),\n                                                _vm._v(\" \"),\n                                                _c(\n                                                  \"div\",\n                                                  {\n                                                    staticClass:\n                                                      \"input-group mb-3\"\n                                                  },\n                                                  [\n                                                    _c(\"input\", {\n                                                      directives: [\n                                                        {\n                                                          name: \"model\",\n                                                          rawName: \"v-model\",\n                                                          value:\n                                                            fee_head.amount,\n                                                          expression:\n                                                            \"fee_head.amount\"\n                                                        }\n                                                      ],\n                                                      staticClass:\n                                                        \"form-control\",\n                                                      attrs: {\n                                                        type: \"text\",\n                                                        name: _vm.getFeeName(\n                                                          fee_group.fee_group_id,\n                                                          index,\n                                                          fee_head.id\n                                                        ),\n                                                        placeholder: _vm.trans(\n                                                          \"finance.fee_installment_amount\"\n                                                        )\n                                                      },\n                                                      domProps: {\n                                                        value: fee_head.amount\n                                                      },\n                                                      on: {\n                                                        input: function(\n                                                          $event\n                                                        ) {\n                                                          if (\n                                                            $event.target\n                                                              .composing\n                                                          ) {\n                                                            return\n                                                          }\n                                                          _vm.$set(\n                                                            fee_head,\n                                                            \"amount\",\n                                                            $event.target.value\n                                                          )\n                                                        }\n                                                      }\n                                                    }),\n                                                    _vm._v(\" \"),\n                                                    _c(\n                                                      \"div\",\n                                                      {\n                                                        staticClass:\n                                                          \"input-group-append\"\n                                                      },\n                                                      [\n                                                        _c(\n                                                          \"div\",\n                                                          {\n                                                            staticClass:\n                                                              \"input-group-text\"\n                                                          },\n                                                          [\n                                                            _c(\"input\", {\n                                                              directives: [\n                                                                {\n                                                                  name: \"model\",\n                                                                  rawName:\n                                                                    \"v-model\",\n                                                                  value:\n                                                                    fee_head.is_optional,\n                                                                  expression:\n                                                                    \"fee_head.is_optional\"\n                                                                },\n                                                                {\n                                                                  name:\n                                                                    \"tooltip\",\n                                                                  rawName:\n                                                                    \"v-tooltip\",\n                                                                  value: _vm.trans(\n                                                                    \"finance.fee_is_optional\"\n                                                                  ),\n                                                                  expression:\n                                                                    \"trans('finance.fee_is_optional')\"\n                                                                }\n                                                              ],\n                                                              attrs: {\n                                                                type: \"checkbox\"\n                                                              },\n                                                              domProps: {\n                                                                checked: Array.isArray(\n                                                                  fee_head.is_optional\n                                                                )\n                                                                  ? _vm._i(\n                                                                      fee_head.is_optional,\n                                                                      null\n                                                                    ) > -1\n                                                                  : fee_head.is_optional\n                                                              },\n                                                              on: {\n                                                                change: function(\n                                                                  $event\n                                                                ) {\n                                                                  var $$a =\n                                                                      fee_head.is_optional,\n                                                                    $$el =\n                                                                      $event.target,\n                                                                    $$c = $$el.checked\n                                                                      ? true\n                                                                      : false\n                                                                  if (\n                                                                    Array.isArray(\n                                                                      $$a\n                                                                    )\n                                                                  ) {\n                                                                    var $$v = null,\n                                                                      $$i = _vm._i(\n                                                                        $$a,\n                                                                        $$v\n                                                                      )\n                                                                    if (\n                                                                      $$el.checked\n                                                                    ) {\n                                                                      $$i < 0 &&\n                                                                        _vm.$set(\n                                                                          fee_head,\n                                                                          \"is_optional\",\n                                                                          $$a.concat(\n                                                                            [\n                                                                              $$v\n                                                                            ]\n                                                                          )\n                                                                        )\n                                                                    } else {\n                                                                      $$i >\n                                                                        -1 &&\n                                                                        _vm.$set(\n                                                                          fee_head,\n                                                                          \"is_optional\",\n                                                                          $$a\n                                                                            .slice(\n                                                                              0,\n                                                                              $$i\n                                                                            )\n                                                                            .concat(\n                                                                              $$a.slice(\n                                                                                $$i +\n                                                                                  1\n                                                                              )\n                                                                            )\n                                                                        )\n                                                                    }\n                                                                  } else {\n                                                                    _vm.$set(\n                                                                      fee_head,\n                                                                      \"is_optional\",\n                                                                      $$c\n                                                                    )\n                                                                  }\n                                                                }\n                                                              }\n                                                            })\n                                                          ]\n                                                        )\n                                                      ]\n                                                    )\n                                                  ]\n                                                ),\n                                                _vm._v(\" \"),\n                                                _c(\"show-error\", {\n                                                  attrs: {\n                                                    \"form-name\":\n                                                      _vm.feeAllocationForm,\n                                                    \"prop-name\": _vm.getFeeName(\n                                                      fee_group.fee_group_id,\n                                                      index,\n                                                      fee_head.id\n                                                    )\n                                                  }\n                                                })\n                                              ],\n                                              1\n                                            )\n                                          ]\n                                        )\n                                      }),\n                                      _vm._v(\" \"),\n                                      fee_group.has_transport\n                                        ? _c(\n                                            \"div\",\n                                            { staticClass: \"col-12 col-sm-6\" },\n                                            [\n                                              _c(\n                                                \"div\",\n                                                { staticClass: \"form-group\" },\n                                                [\n                                                  _c(\n                                                    \"label\",\n                                                    { attrs: { for: \"\" } },\n                                                    [\n                                                      _vm._v(\n                                                        _vm._s(\n                                                          _vm.trans(\n                                                            \"transport.transport\"\n                                                          )\n                                                        )\n                                                      )\n                                                    ]\n                                                  ),\n                                                  _vm._v(\" \"),\n                                                  _c(\n                                                    \"v-select\",\n                                                    {\n                                                      attrs: {\n                                                        label: \"name\",\n                                                        name: _vm.getTransportFeeName(\n                                                          fee_group.fee_group_id,\n                                                          index\n                                                        ),\n                                                        id: _vm.getTransportFeeName(\n                                                          fee_group.fee_group_id,\n                                                          index\n                                                        ),\n                                                        options:\n                                                          _vm.transport_fees,\n                                                        placeholder: _vm.trans(\n                                                          \"general.select_one\"\n                                                        )\n                                                      },\n                                                      on: {\n                                                        select:\n                                                          _vm.onTransportFeeSelect,\n                                                        close: function(\n                                                          $event\n                                                        ) {},\n                                                        remove: function(\n                                                          $event\n                                                        ) {\n                                                          installment.transport_fee_id =\n                                                            \"\"\n                                                        }\n                                                      },\n                                                      model: {\n                                                        value:\n                                                          installment.selected_transport_fee,\n                                                        callback: function(\n                                                          $$v\n                                                        ) {\n                                                          _vm.$set(\n                                                            installment,\n                                                            \"selected_transport_fee\",\n                                                            $$v\n                                                          )\n                                                        },\n                                                        expression:\n                                                          \"installment.selected_transport_fee\"\n                                                      }\n                                                    },\n                                                    [\n                                                      !_vm.transport_fees.length\n                                                        ? _c(\n                                                            \"div\",\n                                                            {\n                                                              staticClass:\n                                                                \"multiselect__option\",\n                                                              attrs: {\n                                                                slot:\n                                                                  \"afterList\"\n                                                              },\n                                                              slot: \"afterList\"\n                                                            },\n                                                            [\n                                                              _vm._v(\n                                                                \"\\n                                                        \" +\n                                                                  _vm._s(\n                                                                    _vm.trans(\n                                                                      \"general.no_option_found\"\n                                                                    )\n                                                                  ) +\n                                                                  \"\\n                                                    \"\n                                                              )\n                                                            ]\n                                                          )\n                                                        : _vm._e()\n                                                    ]\n                                                  ),\n                                                  _vm._v(\" \"),\n                                                  _c(\"show-error\", {\n                                                    attrs: {\n                                                      \"form-name\":\n                                                        _vm.feeAllocationForm,\n                                                      \"prop-name\": _vm.getTransportFeeName(\n                                                        fee_group.fee_group_id,\n                                                        index\n                                                      )\n                                                    }\n                                                  })\n                                                ],\n                                                1\n                                              )\n                                            ]\n                                          )\n                                        : _vm._e()\n                                    ],\n                                    2\n                                  )\n                                ])\n                              ]\n                            )\n                          ])\n                        }),\n                        0\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-info btn-sm pull-right\",\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.addInstallment(fee_group.fee_group_id)\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.trans(\"finance.add_fee_installment\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"clearfix\" })\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"card-footer text-right\" },\n                [\n                  _c(\n                    \"router-link\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.uuid,\n                          expression: \"uuid\"\n                        }\n                      ],\n                      staticClass: \"btn btn-danger waves-effect waves-light \",\n                      attrs: { to: \"/finance/fee/allocation\" }\n                    },\n                    [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-info waves-effect waves-light\",\n                      attrs: { type: \"submit\" }\n                    },\n                    [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                  )\n                ],\n                1\n              )\n            ]\n          : _vm._e()\n      ],\n      2\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=820e1cb4&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Volumes/Webmaster/Projects/ScriptMint/instikit/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('820e1cb4')) {\n      api.createRecord('820e1cb4', component.options)\n    } else {\n      api.reload('820e1cb4', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=820e1cb4&\", function () {\n      api.rerender('820e1cb4', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/finance/fee/allocation/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=820e1cb4&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAZA;AActLA;AAtuBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}